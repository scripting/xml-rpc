<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Mon, 25 Mar 2024 02:24:08 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: xmlRpcDocs</title>
		<dateCreated>Sat, 21 Dec 2019 15:08:39 GMT</dateCreated>
		<dateModified>Mon, 25 Mar 2024 02:24:08 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 6, 9, 12, 14</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>78</windowTop>
		<windowLeft>664</windowLeft>
		<windowBottom>1236</windowBottom>
		<windowRight>1960</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/xmlrpc/">
			<outline text="readme.md">
				<outline text="# What is XML-RPC?  ">
					<outline text="It's a &lt;a href=&quot;http://xmlrpc.com/spec.md&quot;&gt;spec&lt;/a&gt; and a set of implementations that allow software running on disparate operating systems, running in different environments to make procedure calls over the Internet."/>
					<outline text="It's remote procedure calling using HTTP as the transport and XML as the encoding. XML-RPC is designed to be as simple as possible, while allowing complex data structures to be transmitted, processed and returned."/>
					</outline>
				<outline text="### JavaScript implementation">
					<outline text="Starting in 2019, there's a new implementation of XML-RPC in JavaScript.">
						<outline text="* Client and server &lt;a href=&quot;https://www.npmjs.com/package/davexmlrpc&quot;&gt;for Node.js&lt;/a&gt;."/>
						<outline text="* Client for the &lt;a href=&quot;https://github.com/scripting/xml-rpc/tree/master/client&quot;&gt;browser&lt;/a&gt;."/>
						<outline text="* Pure JavaScript."/>
						<outline text="* Supports XML and JSON encoding."/>
						<outline text="* New debugger and validation suite. "/>
						<outline text="* Example code."/>
						<outline text="* Written by one of the &lt;a href=&quot;http://scripting.com/?tab=about&quot;&gt;designers&lt;/a&gt; of the protocol."/>
						</outline>
					</outline>
				<outline text="### Example client">
					<outline text="Here's code that makes a simple XML-RPC call in a Node.js app.">
						<outline text="&lt;pre&gt;[[http://scripting.com/code/xmlrpc/examples/nodeclient/client.js]]&lt;/pre&gt;"/>
						</outline>
					<outline text="It sends a call to the demo server, betty.userland.com. "/>
					<outline text="The procedure it calls is &quot;examples.getStateName,&quot; with a single parameter, the number 5."/>
					<outline text="The call will be made in XML (it could also use JSON if we know the server supports it). "/>
					<outline text="When the server returns, the callback receives the standard Node error object in the first param, and if there was no error, the data returned through XML-RPC in the second parameter."/>
					</outline>
				<outline text="### Example server">
					<outline text="Here's the code for a simple XML-RPC server. "/>
					<outline text="&lt;pre&gt;[[http://scripting.com/code/xmlrpc/examples/simple/simple.js]]&lt;/pre&gt;"/>
					<outline text="Here's pseudo-code that calls this service. It returns THIS IS A TEST.">
						<outline text="&lt;pre&gt;[&quot;xmlrpc://localhost:1417/rpc2&quot;].uppercase (&quot;this is a test&quot;)&lt;/pre&gt;"/>
						</outline>
					</outline>
				<outline text="### Simple XML-RPC debugger">
					<outline text="I've put up a &lt;a href=&quot;http://scripting.com/code/xmlrpcdebugger/&quot;&gt;simple app&lt;/a&gt; that lets you try calling an XML-RPC procedure from an HTML form, where you supply the URL of the endpoint, the verb you want to call, and its parameters as a JavaScript expression. "/>
					<outline text="It then displays the result in JSON in a box below. "/>
					<outline text="If there's an error message it's displayed in red."/>
					<outline text="You can try calling these routines on betty.scripting.com (it's the default endpoint):">
						<outline text="1. examples.getStateName, params = 31"/>
						<outline text="2. examples.getStateNames, params = [12, 22, 32, 42]"/>
						<outline text="3. examples.getStateList, params = [\[12, 22, 32, 42]\] "/>
						<outline text="4. examples.getStateStruct, params = [{state1: 3, state2: 42}] "/>
						<outline text="5. examples.getStateName, params = 900 (error)"/>
						<outline text="5. noSuchName (error)"/>
						</outline>
					<outline text="If you open the JavaScript console, you'll see the actual XML-RPC cals, in XML, as they go over the wire. &lt;a href=&quot;http://scripting.com/images/2018/05/30/xmlRpcOverTheWire.png&quot;&gt;Screen shot&lt;/a&gt;."/>
					</outline>
				<outline text="### How params work in the xmlRpcClient">
					<outline text="The third param to the xmlRpcClient function is either a value or a list of values."/>
					<outline text="If it's a value, the XML-RPC procedure is called with a single parameter."/>
					<outline text="If it's a list with N elements, the procedure is called with N params. "/>
					<outline text="If you want to call a procedure with a single param that's a list, send a list with a single element that's the list. It's the one weird case for this calling convention, and is illustrated with the third call, above."/>
					</outline>
				<outline text="### Using JSON in place of XML">
					<outline text="The XML-RPC standard specifies using XML, of course, but in this implementation, as an experiment, you can also use JSON."/>
					<outline text="When processing a request, we look at the first non-whitespace character. If it's a left curly brace, we treat it as JSON, not XML."/>
					<outline text="I haven't written a spec for the JSONified version, but I have created a &lt;a href=&quot;http://scripting.com/misc/xmlrpc-in-json.html&quot;&gt;cribsheet&lt;/a&gt; with examples that I used to guide the implementation. "/>
					<outline text="Two types, &amp;lt;base64&gt; and &amp;lt;dateTime.iso8601&gt; are represented as strings. There is no way for the toolkit to know they are binary data or dates. This means that the XML and JSON versions are not exactly the same. Not sure what the implications of this will be. I wrote up the issue &lt;a href=&quot;http://scripting.com/2018/06/10/152333.html&quot;&gt;on Scripting News&lt;/a&gt;."/>
					</outline>
				<outline text="### Please help test for interop">
					<outline text="If you're running XML-RPC in your world, could you try testing against the server "/>
					<outline text="I have running at betty.scripting.com. The server is accessible through port 80. The calls it handles are exactly the ones handled by the userland version of the test server. Demo &lt;a href=&quot;https://github.com/scripting/xml-rpc/blob/master/client/code.js&quot;&gt;code&lt;/a&gt; that calls the actual server is provided, in JavaScript."/>
					<outline text="The goal is to replace betty.userland.com with the one running here. But only after enough testing to be confident that it makes a good reference server. "/>
					<outline text="If you have success, or find problems, please post a note in the &lt;a href=&quot;https://github.com/scripting/xml-rpc/issues&quot;&gt;issues section&lt;/a&gt; here. Thanks!"/>
					</outline>
				<outline text="### How to participate">
					<outline text="I started a page at &lt;a href=&quot;http://reboot.xmlrpc.com/&quot;&gt;reboot.xmlrpc.com&lt;/a&gt; with links to new stuff related to this work. "/>
					<outline text="Read Eric Kidd's fantastic &lt;a href=&quot;https://tldp.org/HOWTO/XML-RPC-HOWTO/index.html&quot;&gt;XML-RPC HowTo&lt;/a&gt;."/>
					<outline text="Test your implementation on the XML-RPC Validator page."/>
					</outline>
				<outline text="### The original site">
					<outline text="The original site, dating back to 1998, is &lt;a href=&quot;http://1998.xmlrpc.com/&quot;&gt;preserved&lt;/a&gt;. "/>
					</outline>
				<outline text="### Lest anyone forget ">
					<outline text="The first implementation of XML-RPC was in &lt;a href=&quot;http://frontier.userland.com/stories/storyReader$101&quot;&gt;Frontier&lt;/a&gt;, in April 1998. "/>
					</outline>
				<outline text="### Questions, comments?">
					<outline text="Post an &lt;a href=&quot;https://github.com/scripting/xml-rpc/issues&quot;&gt;issue&lt;/a&gt; here. "/>
					</outline>
				</outline>
			<outline text="spec.md">
				<outline text="&lt;i&gt;Tue, Jun 15, 1999; by Dave Winer.&lt;/i&gt; "/>
				<outline text="# XML-RPC Specification">
					<outline text="&lt;i&gt;&lt;a href=&quot;#update3&quot;&gt;Updated 6/30/03 DW&lt;/a&gt;&lt;/i&gt;&lt;br&gt;&lt;i&gt;&lt;a href=&quot;#update2&quot;&gt;Updated 10/16/99 DW&lt;/a&gt;&lt;/i&gt;&lt;br&gt;&lt;i&gt;&lt;a href=&quot;#update1&quot;&gt;Updated 1/21/99 DW&lt;/a&gt;&lt;/i&gt;"/>
					<outline text="This specification documents the XML-RPC protocol implemented in &lt;a href=&quot;http://frontier.userland.com/&quot;&gt;UserLand Frontier&lt;/a&gt; 5.1. "/>
					<outline text="For a non-technical explanation, see &lt;a href=&quot;http://davenet.userland.com/1998/07/14/xmlRpcForNewbies&quot;&gt;XML-RPC for Newbies&lt;/a&gt;. "/>
					<outline text="This page provides all the information that an implementor needs."/>
					<outline text="### Overview">
						<outline text="XML-RPC is a Remote Procedure Calling protocol that works over the Internet."/>
						<outline text="An XML-RPC message is an HTTP-POST request. The body of the request is in XML. A procedure executes on the server and the value it returns is also formatted in XML."/>
						<outline text="Procedure parameters can be scalars, numbers, strings, dates, etc.; and can also be complex record and list structures."/>
						</outline>
					<outline text="### Request example">
						<outline text="Here's an example of an XML-RPC request:"/>
						<outline text="&lt;%includeExample (&quot;example1&quot;)%&gt;"/>
						</outline>
					<outline text="### Header requirements">
						<outline text=""/>
						<outline text="The format of the URI in the first line of the header is not specified. For example, it could be empty, a single slash, if the server is only handling XML-RPC calls. However, if the server is handling a mix of incoming HTTP requests, we allow the URI to help route the request to the code that handles XML-RPC requests. (In the example, the URI is /RPC2, telling the server to route the request to the &quot;RPC2&quot; responder.)"/>
						<outline text=""/>
						<outline text="A User-Agent and Host must be specified. "/>
						<outline text=""/>
						<outline text="The Content-Type is text/xml. "/>
						<outline text=""/>
						<outline text="The Content-Length must be specified and must be correct."/>
						<outline text=""/>
						</outline>
					<outline text="### Payload format">
						<outline text=""/>
						<outline text="The payload is in XML, a single &amp;lt;methodCall&gt; structure."/>
						<outline text=""/>
						<outline text="The &amp;lt;methodCall&gt; must contain a &amp;lt;methodName&gt; sub-item, a string, containing the name of the method to be called. The string may only contain identifier characters, upper and lower-case A-Z, the numeric characters, 0-9, underscore, dot, colon and slash. It's entirely up to the server to decide how to interpret the characters in a methodName. "/>
						<outline text=""/>
						<outline text="For example, the methodName could be the name of a file containing a script that executes on an incoming request. It could be the name of a cell in a database table. Or it could be a path to a file contained within a hierarchy of folders and files."/>
						<outline text=""/>
						<outline text="If the procedure call has parameters, the &amp;lt;methodCall&gt; must contain a &amp;lt;params&gt; sub-item. The &amp;lt;params&gt; sub-item can contain any number of &amp;lt;param&gt;s, each of which has a &amp;lt;value&gt;. "/>
						<outline text=""/>
						</outline>
					<outline text="### &lt;a name=&quot;scalars&quot;&gt;Scalar &amp;lt;value&gt;s&lt;/a&gt;">
						<outline text=""/>
						<outline text="&amp;lt;value&gt;s can be scalars, type is indicated by nesting the value inside one of the tags listed in this table:"/>
						<outline text=""/>
						<outline text="&lt;table cellspacing=3 border=0&gt;"/>
						<outline text="&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;b&gt;Tag&lt;/b&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;35%&quot;&gt;&lt;b&gt;Type&lt;/b&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;b&gt;Example&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;"/>
						<outline text=""/>
						<outline text="&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&amp;lt;i4&gt; or &amp;lt;int&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;35%&quot;&gt;four-byte signed integer&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;-12&lt;/td&gt;&lt;/tr&gt;"/>
						<outline text=""/>
						<outline text="&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&amp;lt;boolean&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;0 (false) or 1 (true)&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;1&lt;/td&gt;&lt;/tr&gt;"/>
						<outline text=""/>
						<outline text="&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&amp;lt;string&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;string&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;hello world&lt;/td&gt;&lt;/tr&gt;"/>
						<outline text=""/>
						<outline text="&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&amp;lt;double&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;double-precision signed floating point number&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;-12.214&lt;/td&gt;&lt;/tr&gt;"/>
						<outline text=""/>
						<outline text="&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&amp;lt;dateTime.iso8601&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;date/time&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;19980717T14:08:55&lt;/td&gt;&lt;/tr&gt;"/>
						<outline text=""/>
						<outline text="&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&amp;lt;base64&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;base64-encoded binary&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;eW91IGNhbid0IHJlYWQgdGhpcyE=&lt;/td&gt;&lt;/tr&gt;"/>
						<outline text="&lt;/table&gt;"/>
						<outline text=""/>
						<outline text="If no type is indicated, the type is string."/>
						<outline text=""/>
						</outline>
					<outline text="### &amp;lt;struct&gt;s">
						<outline text="A value can also be of type &amp;lt;struct&gt;."/>
						<outline text="A &amp;lt;struct&gt; contains &amp;lt;member&gt;s and each &amp;lt;member&gt; contains a &amp;lt;name&gt; and a &amp;lt;value&gt;. "/>
						<outline text="Here's an example of a two-element &amp;lt;struct&gt;:"/>
						<outline text="&lt;%includeExample (&quot;example2&quot;)%&gt;"/>
						<outline text="&amp;lt;struct&gt;s can be recursive, any &amp;lt;value&gt; may contain a &amp;lt;struct&gt; or any other type, including an &amp;lt;array&gt;, described below."/>
						</outline>
					<outline text="### &amp;lt;array&gt;s">
						<outline text="A value can also be of type &amp;lt;array&gt;."/>
						<outline text="An &amp;lt;array&gt; contains a single &amp;lt;data&gt; element, which can contain any number of &amp;lt;value&gt;s."/>
						<outline text="Here's an example of a four-element array:"/>
						<outline text="&lt;%includeExample (&quot;example3&quot;)%&gt;"/>
						<outline text="&amp;lt;array&gt; elements do not have names. "/>
						<outline text="You can mix types as the example above illustrates."/>
						<outline text="&amp;lt;arrays&gt;s can be recursive, any value may contain an &amp;lt;array&gt; or any other type, including a &amp;lt;struct&gt;, described above."/>
						</outline>
					<outline text="### Response example">
						<outline text="Here's an example of a response to an XML-RPC request:"/>
						<outline text="&lt;%includeExample (&quot;example4&quot;)%&gt; "/>
						</outline>
					<outline text="### Response format">
						<outline text="Unless there's a lower-level error, always return 200 OK."/>
						<outline text="The Content-Type is text/xml. Content-Length must be present and correct."/>
						<outline text="The body of the response is a single XML structure, a &amp;lt;methodResponse&gt;, which can contain a single &amp;lt;params&gt; which contains a single &amp;lt;param&gt; which contains a single &amp;lt;value&gt;."/>
						<outline text="&lt;a name=&quot;faults&quot;&gt;&lt;/a&gt;The &amp;lt;methodResponse&gt; could also contain a &amp;lt;fault&gt; which contains a &amp;lt;value&gt; which is a &amp;lt;struct&gt; containing two elements, one named &amp;lt;faultCode&gt;, an &amp;lt;int&gt; and one named &amp;lt;faultString&gt;, a &amp;lt;string&gt;."/>
						<outline text="A &amp;lt;methodResponse&gt; can not contain both a &amp;lt;fault&gt; and a &amp;lt;params&gt;."/>
						</outline>
					<outline text="### Fault example">
						<outline text="&lt;%includeExample (&quot;example5&quot;)%&gt;"/>
						</outline>
					<outline text="### &lt;a name=&quot;goals&quot;&gt;Strategies/Goals&lt;/a&gt;">
						<outline text=""/>
						<outline text="&lt;i&gt;Firewalls.&lt;/i&gt; The goal of this protocol is to lay a compatible foundation across different environments, no new power is provided beyond the capabilities of the CGI interface. Firewall software can watch for POSTs whose Content-Type is text/xml. "/>
						<outline text=""/>
						<outline text="&lt;i&gt;Discoverability.&lt;/i&gt; We wanted a clean, extensible format that's very simple. It should be possible for an HTML coder to be able to look at a file containing an XML-RPC procedure call, understand what it's doing, and be able to modify it and have it work on the first or second try. "/>
						<outline text=""/>
						<outline text="&lt;i&gt;Easy to implement.&lt;/i&gt; We also wanted it to be an easy to implement protocol that could quickly be adapted to run in other environments or on other operating systems."/>
						<outline text=""/>
						</outline>
					<outline text="### &lt;a name=&quot;update1&quot;&gt;Updated 1/21/99 DW&lt;/a&gt;">
						<outline text="The following questions came up on the UserLand &lt;a href=&quot;http://discuss.userland.com/&quot;&gt;discussion group&lt;/a&gt; as XML-RPC was being implemented in Python. &lt;ul&gt;"/>
						<outline text="&lt;li&gt;The Response Format section says &quot;The body of the response is a single XML structure, a &amp;lt;methodResponse&gt;, which &lt;i&gt;can&lt;/i&gt; contain a single &amp;lt;params&gt;...&quot; This is confusing. Can we leave out the  &amp;lt;params&gt;?"/>
						<outline text="No you cannot leave it out if the procedure executed successfully. There are only two options, either a response contains a &amp;lt;params&gt; structure or it contains a &amp;lt;fault&gt; structure. That's why we used the word &quot;can&quot; in that sentence."/>
						<outline text="&lt;li&gt;Is &quot;boolean&quot; a distinct data type, or can boolean values be interchanged with integers (e.g. zero=false, non-zero=true)? "/>
						<outline text="Yes, boolean is a distinct data type. Some languages/environments allow for an easy coercion from zero to false and one to true, but if you mean true, send a boolean type with the value true, so your intent can't possibly be misunderstood."/>
						<outline text="&lt;li&gt;What is the legal syntax (and range) for integers? How to deal with leading zeros? Is a leading plus sign allowed? How to deal with whitespace? "/>
						<outline text="An integer is a 32-bit signed number. You can include a plus or minus at the beginning of a string of numeric characters. Leading zeros are collapsed. Whitespace is not permitted. Just numeric characters preceeded by a plus or minus."/>
						<outline text="&lt;li&gt;What is the legal syntax (and range) for floating point values (doubles)? How is the exponent represented? How to deal with whitespace? Can infinity and &quot;not a number&quot; be represented? "/>
						<outline text="There is no representation for infinity or negative infinity or &quot;not a number&quot;. At this time, only decimal point notation is allowed, a plus or a minus, followed by any number of numeric characters, followed by a period and any number of numeric characters. Whitespace is not allowed. The range of allowable values is implementation-dependent, is not specified."/>
						<outline text="&lt;li&gt;What characters are allowed in strings? Non-printable characters? Null characters? Can a &quot;string&quot; be used to hold an arbitrary chunk of binary data? "/>
						<outline text="Any characters are allowed in a string except &amp;lt; and &amp;, which are encoded as &amp;amp;lt; and &amp;amp;amp;. A string can be used to encode binary data."/>
						<outline text="&lt;li&gt;Does the &quot;struct&quot; element keep the order of keys. Or in other words, is the struct &quot;foo=1, bar=2&quot; equivalent to &quot;bar=2, foo=1&quot; or not? "/>
						<outline text="The struct element does not preserve the order of the keys. The two structs are equivalent."/>
						<outline text="&lt;li&gt;Can the &amp;lt;fault&gt; struct contain other members than &amp;lt;faultCode&gt; and &amp;lt;faultString&gt;? Is there a global list of faultCodes? (so they can be mapped to distinct exceptions for languages like Python and Java)? "/>
						<outline text="A &amp;lt;fault&gt; struct &lt;b&gt;may not&lt;/b&gt; contain members other than those specified. This is true for all other structures. We believe the specification is flexible enough so that all reasonable data-transfer needs can be accomodated within the specified structures. If you believe strongly that this is not true, please post a message on the discussion group."/>
						<outline text="There is no global list of fault codes. It is up to the server implementer, or higher-level standards to specify fault codes."/>
						<outline text="&lt;li&gt;What timezone should be assumed for the dateTime.iso8601 type? UTC? localtime? "/>
						<outline text="Don't assume a timezone. It should be specified by the server in its documentation what assumptions it makes about timezones."/>
						<outline text="&lt;/ul&gt;"/>
						<outline text=""/>
						</outline>
					<outline text="### Additions">
						<outline text="&lt;ul&gt;"/>
						<outline text="&lt;li&gt;&amp;lt;base64&gt; type. 1/21/99 DW."/>
						<outline text="&lt;/ul&gt;"/>
						</outline>
					<outline text="### &lt;a name=&quot;update3&quot;&gt;Updated 6/30/03 DW&lt;/a&gt;">
						<outline text=""/>
						<outline text="Removed &quot;ASCII&quot; from definition of string."/>
						<outline text=""/>
						<outline text="Changed copyright dates, below, to 1999-2003 from 1998-99."/>
						<outline text=""/>
						</outline>
					<outline text="### &lt;a name=&quot;update2&quot;&gt;Copyright and disclaimer&lt;/a&gt;">
						<outline text="&amp;copy; Copyright 1998-2003 UserLand Software. All Rights Reserved."/>
						<outline text="This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and these paragraphs are included on all such copies and derivative works.  "/>
						<outline text="This document may not be modified in any way, such as by removing the copyright notice or references to UserLand or other organizations. Further, while these copyright restrictions apply to the written XML-RPC specification, no claim of ownership is made by UserLand to the protocol it describes. Any party may, for commercial or non-commercial purposes, implement this protocol without royalty or license fee to UserLand. The limited permissions granted herein are perpetual and will not be revoked by UserLand or its successors or assigns."/>
						<outline text="This document and the information contained herein is provided on an &quot;AS IS&quot; basis and USERLAND DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE."/>
						</outline>
					</outline>
				</outline>
			<outline text="docs/xml-rpc-in-json.md">
				<outline text="&lt;i&gt;June 2018 by Dave Winer&lt;/i&gt; "/>
				<outline text="# XML-RPC-in-JSON examples">
					<outline text="The new &lt;a href=&quot;/&quot;&gt;JavaScript toolkit&lt;/a&gt; for XML-RPC supports a &lt;a href=&quot;/#using-json-in-place-of-xml&quot;&gt;JSON syntax&lt;/a&gt;."/>
					<outline text="Below are five examples first showing the standard XML-RPC syntax followed by the experimental JavaScript syntax."/>
					<outline text="### Single param">
						<outline text="&lt;%includeExample (&quot;example6&quot;)%&gt;"/>
						<outline text="&lt;%includeExample (&quot;example7&quot;)%&gt;"/>
						</outline>
					<outline text="### Param is an array">
						<outline text="&lt;%includeExample (&quot;example8&quot;)%&gt;"/>
						<outline text="&lt;%includeExample (&quot;example9&quot;)%&gt;"/>
						</outline>
					<outline text="### Param is a struct">
						<outline text="&lt;%includeExample (&quot;example10&quot;)%&gt;"/>
						<outline text="&lt;%includeExample (&quot;example11&quot;)%&gt;"/>
						</outline>
					<outline text="### Normal, non-error response">
						<outline text="&lt;%includeExample (&quot;example12&quot;)%&gt;"/>
						<outline text="&lt;%includeExample (&quot;example13&quot;)%&gt;"/>
						</outline>
					<outline text="### Error response">
						<outline text="&lt;%includeExample (&quot;example14&quot;)%&gt;"/>
						<outline text="&lt;%includeExample (&quot;example15&quot;)%&gt;"/>
						</outline>
					</outline>
				</outline>
			<outline text="docs/guidetolegacysite.md">
				<outline text="# The 1998 XML-RPC site ">
					<outline text="Here are links to archived pages on the &lt;a href=&quot;http://1998.xmlrpc.com/&quot;&gt;original version&lt;/a&gt; of the XML-RPC site to make them easier to find and review. Most of this material is not replicated on the new site. "/>
					<outline text=""/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/howTheWebBugSimulatorWorks.html&quot;&gt;How the Web Bug Simulator works&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/alidl.html&quot;&gt;RFC: A Little IDL&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/callForEndorsements.html&quot;&gt;Call for Endorsements&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/default.html&quot;&gt;XML-RPC Home&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/metaWeblogApi.html&quot;&gt;RFC: MetaWeblog API&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/davesSoapJournalPart1.html&quot;&gt;Dave's SOAP Journal, part 1&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/metaWeblogNewMediaObject.html&quot;&gt;RFC: metaWeblog.newMediaObject&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/subsHarmonizer.html&quot;&gt;RFC: Subscriptions harmonizer&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/bdgChangeNotes.html&quot;&gt;BDG Change Notes&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/aggregatorApi.html&quot;&gt;XML-RPC interface for the NewsRiver aggregator&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/xmlRpcMan.html&quot;&gt;The XML-RPC Man&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/mttf.html&quot;&gt;XML-RPC interface for MailToTheFuture&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/validator1Docs.html&quot;&gt;XML-RPC validation suite&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/googleGateway.html&quot;&gt;XML-RPC Gateway for the Google API&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/weblogsComForRss.html&quot;&gt;Weblogs.Com for RSS&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/mailList.html&quot;&gt;Mail lists&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/bootstrappingTheTwoWayWeb.html&quot;&gt;Bootstrapping the Two-Way-Web&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/weblogsCom.html&quot;&gt;Weblogs.Com XML-RPC interface&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/manilaRpcSpec.html&quot;&gt;Manila-RPC interface&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/aBusyDevelopersGuideToSoap.html&quot;&gt;A Busy Developer's Guide to SOAP 1.1&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/rebuttalToRest.html&quot;&gt;Rebuttal to REST&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/error.html&quot;&gt;404 not found&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/stateApril2001.html&quot;&gt;The State of XML-RPC, April 2001&lt;/a&gt;"/>
					<outline text="* &lt;a href=&quot;http://1998.xmlrpc.com/spec.html&quot;&gt;XML-RPC Specification&lt;/a&gt;"/>
					</outline>
				</outline>
			<outline text="requestexample.html" isComment="true">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;style&gt;">
							<outline text="pre {">
								<outline text="font-family: &quot;Monaco&quot;;"/>
								<outline text="font-size: 12px;"/>
								<outline text="margin-top: 100px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="width: 500px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divHttpRequest {">
								<outline text="}"/>
								</outline>
							<outline text="&lt;/style&gt;"/>
							</outline>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;"/>
					<outline text="&lt;pre&gt;"/>
					<outline text="POST /RPC2 HTTP/1.0"/>
					<outline text="User-Agent: Frontier/5.1.2 (WinNT)"/>
					<outline text="Host: betty.userland.com"/>
					<outline text="Content-Type: text/xml"/>
					<outline text="Content-length: 181"/>
					<outline text=""/>
					<outline text="&amp;lt;?xml version=&quot;1.0&quot;?&gt;"/>
					<outline text="&amp;lt;methodCall&gt;">
						<outline text="&amp;lt;methodName&gt;examples.getStateName&amp;lt;/methodName&gt;"/>
						<outline text="&amp;lt;params&gt;">
							<outline text="&amp;lt;param&gt;">
								<outline text="&amp;lt;value&gt;&amp;lt;i4&gt;41&amp;lt;/i4&gt;&amp;lt;/value&gt;"/>
								<outline text="&amp;lt;/param&gt;"/>
								</outline>
							<outline text="&amp;lt;/params&gt;"/>
							</outline>
						<outline text="&amp;lt;/methodCall&gt;"/>
						</outline>
					<outline text="&lt;/pre&gt;"/>
					<outline text="&lt;div class=&quot;divHttpRequest&quot;&gt;">
						<outline text="&lt;/div&gt;"/>
						</outline>
					<outline text="&lt;/body&gt;"/>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			<outline text="tmp.md" isComment="true">
				<outline text="one"/>
				<outline text="two"/>
				<outline text="three"/>
				<outline text="&lt;%includeExample (&quot;example1&quot;)%&gt;"/>
				<outline text="&lt;%mymacro (&quot;Bill Di Blasio&quot;)%&gt;"/>
				<outline text="fucking"/>
				<outline text="a"/>
				</outline>
			</outline>
		<outline text="dropbox:miami:pagepark:domains:xmlrpc.com:" isComment="true">
			<outline text="#mdtemplate.html">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;[%title%]&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;link href=&quot;http://scripting.com/code/pagepark/defaultmarkdownstyles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="&lt;script&gt;" created="Thu, 12 Dec 2013 17:06:51 GMT" pgfnum="33502">
							<outline text="var config = [%config%];"/>
							<outline text="function everySecond () {" isComment="true">
								<outline text="}"/>
								</outline>
							<outline text="function startup () {">
								<outline text="console.log (&quot;startup&quot;);"/>
								<outline text="if (config.productnameForDisplay !== undefined) {">
									<outline text="$(&quot;#idMenuProductName&quot;).text (config.productnameForDisplay);"/>
									<outline text="}"/>
									</outline>
								<outline text="hitCounter (); "/>
								<outline text="self.setInterval (everySecond, 1000); " isComment="true"/>
								<outline text="}"/>
								</outline>
							<outline text="&lt;/script&gt;" created="Thu, 12 Dec 2013 17:07:17 GMT" pgfnum="33504"/>
							</outline>
						<outline text="&lt;style&gt;" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
							<outline text="body {">
								<outline text="font-family: &quot;Ubuntu&quot;;"/>
								<outline text="font-size: 18px;"/>
								<outline text="line-height: 140%;"/>
								<outline text="background-color: white; "/>
								<outline text="}"/>
								</outline>
							<outline text=".divPageBody {">
								<outline text="width: 60%;"/>
								<outline text="margin-top: 90px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="margin-bottom: 400px;"/>
								<outline text="color: gainsboro;"/>
								<outline text="}"/>
								</outline>
							<outline text=".ulFileList {">
								<outline text="list-style-type: none;"/>
								<outline text="}"/>
								</outline>
							<outline text=".ulFileList li {">
								<outline text="line-height: 150%;"/>
								<outline text="margin-left: 0;"/>
								<outline text="}"/>
								</outline>
							<outline text=""/>
							<outline text="code {">
								<outline text="color: black;"/>
								<outline text="}"/>
								</outline>
							<outline text=".navbar-inner {">
								<outline text="margin-top: -25px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".markdown-body {">
								<outline text="box-sizing: border-box;"/>
								<outline text="min-width: 200px;"/>
								<outline text="max-width: 980px;"/>
								<outline text="margin: 0 auto;"/>
								<outline text="padding: 45px;" isComment="true"/>
								<outline text="}"/>
								</outline>
							<outline text=".markdown-body p {">
								<outline text="margin-bottom: 8px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".markdown-body ul {">
								<outline text="margin-bottom: 0;"/>
								<outline text="}"/>
								</outline>
							<outline text=".markdown-body br {">
								<outline text="line-height: 16px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".markdown-body hr {">
								<outline text="margin-top: 8px;"/>
								<outline text="margin-bottom: 8px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".markdown-body ol, .markdown-body ul {">
								<outline text="padding-left: 0;"/>
								<outline text="}"/>
								</outline>
							<outline text="@media (max-width: 767px) {">
								<outline text=".markdown-body {">
									<outline text="padding: 15px;"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text=""/>
							<outline text="/* styles for phone */" created="Sun, 09 Mar 2014 19:11:13 GMT" pgfnum="38719">
								<outline text="@media only screen "/>
								<outline text="and (min-device-width : 320px) "/>
								<outline text="and (max-device-width : 480px) {">
									<outline text=".divPageBody {">
										<outline text="width: 96%;"/>
										<outline text="margin-top: 60px;"/>
										<outline text="margin-left: auto;"/>
										<outline text="margin-right: auto;"/>
										<outline text="margin-bottom: 300px;"/>
										<outline text="}"/>
										</outline>
									<outline text=".markdown-body pre {">
										<outline text="padding: 5px;"/>
										<outline text="}"/>
										</outline>
									<outline text=".markdown-body h1 {" isComment="true">
										<outline text="margin-top: 16px;"/>
										<outline text="}"/>
										</outline>
									<outline text=".markdown-body h3 {">
										<outline text="margin-bottom: 8px;"/>
										<outline text="}"/>
										</outline>
									<outline text=".navbar .brand {">
										<outline text="margin-left: 0;"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								</outline>
							<outline text="/* styles for tablet */">
								<outline text="@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {">
									<outline text=".divPageBody {">
										<outline text="width: 75%;"/>
										<outline text="margin-top: 50px;" isComment="true"/>
										<outline text="margin-left: auto;"/>
										<outline text="margin-right: auto;"/>
										<outline text="margin-bottom: 300px;"/>
										<outline text="}"/>
										</outline>
									<outline text=".markdown-body pre {">
										<outline text="padding: 5px;"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								</outline>
							<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
							</outline>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divMenubar&quot; id=&quot;idMenubar&quot;&gt;" created="Thu, 28 Mar 2013 21:39:05 GMT" pgfnum="21615">
							<outline text="&lt;div class=&quot;topbar-wrapper&quot; style=&quot;z-index: 5;&quot;&gt;">
								<outline text="&lt;div class=&quot;navbar navbar-fixed-top&quot; data-dropdown=&quot;dropdown&quot;&gt;">
									<outline text="&lt;div class=&quot;divVersionNumber&quot;&gt;">
										<outline text="&lt;span id=&quot;idPublishStatus&quot;&gt;&lt;/span&gt;&lt;span id=&quot;idSavedStatus&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;span id=&quot;idVersionNumber&quot;&gt;&lt;/span&gt;"/>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;div class=&quot;navbar-inner&quot;&gt;">
										<outline text="&lt;div class=&quot;container&quot;&gt;">
											<outline text="&lt;a class=&quot;brand&quot; href=&quot;&quot;&gt;&lt;span id=&quot;idMenuProductName&quot;&gt;&lt;/span&gt;&lt;/a&gt;"/>
											<outline text="&lt;ul class=&quot;nav&quot; id=&quot;idMainMenuList&quot;&gt;">
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idTheMenu&quot;&gt; ">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Menu&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a href=&quot;/&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="" created="Wed, 17 May 2023 14:35:26 GMT"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://xmlrpc.com/spec.md&quot;&gt;XML-RPC spec&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://xmlrpc.com/storyreader/story2198.md&quot;&gt;MetaWeblog API&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="" created="Wed, 17 May 2023 14:35:28 GMT"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://xmlrpc.com/worknotes.md&quot;&gt;Worknotes&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://scripting.com/code/xmlrpcdebugger/&quot;&gt;Debugger&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://scripting.com/code/xmlrpcbrowserclient/index.html&quot;&gt;Validator&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://xmlrpc.com/docs/xml-rpc-in-json.md&quot;&gt;JSON syntax&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/xml-rpc&quot;&gt;On GitHub...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idDocsMenu&quot;&gt; " isComment="true">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Docs&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/xml-rpc#simple-xml-rpc-debugger&quot; target=&quot;_blank&quot;&gt;Main docs&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;/ul&gt;"/>
												</outline>
											<outline text="&lt;ul class=&quot;nav pull-right&quot;&gt;" isComment="true">
												<outline text="&lt;li class=&quot;dropdown&quot;&gt;">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;&lt;span id=&quot;idTwitterIcon&quot;&gt;&lt;/span&gt;&lt;span id=&quot;idGitHubUserName&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;aboutDialog ();&quot;&gt;About &lt;span id=&quot;idMenuAboutProductName&quot;&gt;&lt;/span&gt;...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;settingsCommand ();&quot;&gt;Settings...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;fbToggleConnectCommand ();&quot; id=&quot;idFacebookConnectMenuItem&quot;&gt;&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;toggleGitHubConnection ();&quot; id=&quot;idGitHubConnectMenuItem&quot;&gt;&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;/ul&gt;"/>
												</outline>
											<outline text="&lt;/div&gt;"/>
											</outline>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Thu, 28 Mar 2013 21:39:17 GMT" pgfnum="21616"/>
							</outline>
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;article class=&quot;markdown-body&quot;&gt;">
								<outline text="[%bodytext%]"/>
								<outline text="&lt;/article&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			</outline>
		<outline text="/scripting.com/code/xmlrpc/templates/">
			<outline text="mdtemplate.html">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;[%title%]&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;link href=&quot;//s3.amazonaws.com/scripting.com/code/pagepark/defaultmarkdownstyles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="&lt;script&gt;" created="Thu, 12 Dec 2013 17:06:51 GMT" pgfnum="33502">
							<outline text="var config = [%config%];"/>
							<outline text="function everySecond () {" isComment="true">
								<outline text="}"/>
								</outline>
							<outline text="function startup () {">
								<outline text="console.log (&quot;startup&quot;);"/>
								<outline text="if (config.productnameForDisplay !== undefined) {">
									<outline text="$(&quot;#idMenuProductName&quot;).text (config.productnameForDisplay);"/>
									<outline text="}"/>
									</outline>
								<outline text="hitCounter (); "/>
								<outline text="self.setInterval (everySecond, 1000); " isComment="true"/>
								<outline text="}"/>
								</outline>
							<outline text="&lt;/script&gt;" created="Thu, 12 Dec 2013 17:07:17 GMT" pgfnum="33504"/>
							</outline>
						<outline text="&lt;style&gt;" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
							<outline text="body {">
								<outline text="font-family: &quot;Ubuntu&quot;;"/>
								<outline text="font-size: 18px;"/>
								<outline text="line-height: 140%;"/>
								<outline text="background-color: white; "/>
								<outline text="}"/>
								</outline>
							<outline text=".divPageBody {">
								<outline text="width: 60%;"/>
								<outline text="margin-top: 90px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="margin-bottom: 400px;"/>
								<outline text="color: gainsboro;"/>
								<outline text="}"/>
								</outline>
							<outline text=".ulFileList {">
								<outline text="list-style-type: none;"/>
								<outline text="}"/>
								</outline>
							<outline text=".ulFileList li {">
								<outline text="line-height: 150%;"/>
								<outline text="margin-left: 0;"/>
								<outline text="}"/>
								</outline>
							<outline text=""/>
							<outline text="code {">
								<outline text="color: black;"/>
								<outline text="}"/>
								</outline>
							<outline text=".navbar-inner {">
								<outline text="margin-top: -25px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".markdown-body {">
								<outline text="box-sizing: border-box;"/>
								<outline text="min-width: 200px;"/>
								<outline text="max-width: 980px;"/>
								<outline text="margin: 0 auto;"/>
								<outline text="padding: 45px;" isComment="true"/>
								<outline text="}"/>
								</outline>
							<outline text=".markdown-body p {">
								<outline text="margin-bottom: 8px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".markdown-body ul {">
								<outline text="margin-bottom: 0;"/>
								<outline text="}"/>
								</outline>
							<outline text=".markdown-body br {">
								<outline text="line-height: 16px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".markdown-body hr {">
								<outline text="margin-top: 8px;"/>
								<outline text="margin-bottom: 8px;"/>
								<outline text="}"/>
								</outline>
							<outline text=".markdown-body ol, .markdown-body ul {">
								<outline text="padding-left: 0;"/>
								<outline text="}"/>
								</outline>
							<outline text="@media (max-width: 767px) {">
								<outline text=".markdown-body {">
									<outline text="padding: 15px;"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text=""/>
							<outline text="/* styles for phone */" created="Sun, 09 Mar 2014 19:11:13 GMT" pgfnum="38719">
								<outline text="@media only screen "/>
								<outline text="and (min-device-width : 320px) "/>
								<outline text="and (max-device-width : 480px) {">
									<outline text=".divPageBody {">
										<outline text="width: 96%;"/>
										<outline text="margin-top: 60px;"/>
										<outline text="margin-left: auto;"/>
										<outline text="margin-right: auto;"/>
										<outline text="margin-bottom: 300px;"/>
										<outline text="}"/>
										</outline>
									<outline text=".markdown-body pre {">
										<outline text="padding: 5px;"/>
										<outline text="}"/>
										</outline>
									<outline text=".markdown-body h1 {" isComment="true">
										<outline text="margin-top: 16px;"/>
										<outline text="}"/>
										</outline>
									<outline text=".markdown-body h3 {">
										<outline text="margin-bottom: 8px;"/>
										<outline text="}"/>
										</outline>
									<outline text=".navbar .brand {">
										<outline text="margin-left: 0;"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								</outline>
							<outline text="/* styles for tablet */">
								<outline text="@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {">
									<outline text=".divPageBody {">
										<outline text="width: 75%;"/>
										<outline text="margin-top: 50px;" isComment="true"/>
										<outline text="margin-left: auto;"/>
										<outline text="margin-right: auto;"/>
										<outline text="margin-bottom: 300px;"/>
										<outline text="}"/>
										</outline>
									<outline text=".markdown-body pre {">
										<outline text="padding: 5px;"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								</outline>
							<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
							</outline>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divMenubar&quot; id=&quot;idMenubar&quot;&gt;" created="Thu, 28 Mar 2013 21:39:05 GMT" pgfnum="21615">
							<outline text="&lt;div class=&quot;topbar-wrapper&quot; style=&quot;z-index: 5;&quot;&gt;">
								<outline text="&lt;div class=&quot;navbar navbar-fixed-top&quot; data-dropdown=&quot;dropdown&quot;&gt;">
									<outline text="&lt;div class=&quot;divVersionNumber&quot;&gt;">
										<outline text="&lt;span id=&quot;idPublishStatus&quot;&gt;&lt;/span&gt;&lt;span id=&quot;idSavedStatus&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;span id=&quot;idVersionNumber&quot;&gt;&lt;/span&gt;"/>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;div class=&quot;navbar-inner&quot;&gt;">
										<outline text="&lt;div class=&quot;container&quot;&gt;">
											<outline text="&lt;a class=&quot;brand&quot; href=&quot;&quot;&gt;&lt;span id=&quot;idMenuProductName&quot;&gt;&lt;/span&gt;&lt;/a&gt;"/>
											<outline text="&lt;ul class=&quot;nav&quot; id=&quot;idMainMenuList&quot;&gt;">
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idTheMenu&quot;&gt; ">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Menu&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a href=&quot;/&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;spec.md&quot;&gt;XML-RPC spec&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://scripting.com/code/xmlrpcdebugger/&quot;&gt;Debugger&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;http://scripting.com/code/xmlrpcbrowserclient/index.html&quot;&gt;Validator&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;docs/guidetolegacysite.md&quot;&gt;1998 legacy site&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;docs/xml-rpc-in-json.md&quot;&gt;JSON syntax&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/xml-rpc&quot;&gt;On GitHub...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idDocsMenu&quot;&gt; " isComment="true">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Docs&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/xml-rpc#simple-xml-rpc-debugger&quot; target=&quot;_blank&quot;&gt;Main docs&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;/ul&gt;"/>
												</outline>
											<outline text="&lt;ul class=&quot;nav pull-right&quot;&gt;" isComment="true">
												<outline text="&lt;li class=&quot;dropdown&quot;&gt;">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;&lt;span id=&quot;idTwitterIcon&quot;&gt;&lt;/span&gt;&lt;span id=&quot;idGitHubUserName&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;aboutDialog ();&quot;&gt;About &lt;span id=&quot;idMenuAboutProductName&quot;&gt;&lt;/span&gt;...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;settingsCommand ();&quot;&gt;Settings...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;fbToggleConnectCommand ();&quot; id=&quot;idFacebookConnectMenuItem&quot;&gt;&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;toggleGitHubConnection ();&quot; id=&quot;idGitHubConnectMenuItem&quot;&gt;&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;/ul&gt;"/>
												</outline>
											<outline text="&lt;/div&gt;"/>
											</outline>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Thu, 28 Mar 2013 21:39:17 GMT" pgfnum="21616"/>
							</outline>
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;article class=&quot;markdown-body&quot;&gt;">
								<outline text="[%bodytext%]"/>
								<outline text="&lt;/article&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			</outline>
		<outline text="/scripting.com/misc/" isComment="true">
			<outline text="xmlrpc-in-json.html">
				<outline text="&lt;html&gt;"/>
				<outline text="&lt;head&gt;">
					<outline text="&lt;title&gt;XML-RPC-in-JSON examples&lt;/title&gt;"/>
					<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
					<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
					<outline text="&lt;%basicIncludes2%&gt;"/>
					<outline text="&lt;script&gt;" created="Thu, 12 Dec 2013 17:06:51 GMT" pgfnum="33502">
						<outline text="function everySecond () {">
							<outline text="}"/>
							</outline>
						<outline text="function startup () {">
							<outline text="console.log (&quot;startup&quot;);"/>
							<outline text="self.setInterval (function () {everySecond ()}, 1000); "/>
							<outline text="}"/>
							</outline>
						<outline text="&lt;/script&gt;" created="Thu, 12 Dec 2013 17:07:17 GMT" pgfnum="33504"/>
						</outline>
					<outline text="&lt;style&gt;" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
						<outline text="body {">
							<outline text="font-family: Ubuntu;"/>
							<outline text="font-size: 18px;"/>
							<outline text="background-color: whitesmoke;"/>
							<outline text="}"/>
							</outline>
						<outline text=".divPageBody {">
							<outline text="width: 60%;"/>
							<outline text="margin-top: 50px;"/>
							<outline text="margin-left: auto;"/>
							<outline text="margin-right: auto;"/>
							<outline text="margin-bottom: 600px;"/>
							<outline text="}"/>
							</outline>
						<outline text="h4 {">
							<outline text="font-family: &quot;Arial&quot;;"/>
							<outline text="margin-top: 35px;"/>
							<outline text="}"/>
							</outline>
						<outline text="pre {">
							<outline text="background-color: white;"/>
							<outline text="}"/>
							</outline>
						<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
						</outline>
					<outline text="&lt;/head&gt;"/>
					</outline>
				<outline text="&lt;body&gt;"/>
				<outline text="&lt;div class=&quot;divPageBody&quot;&gt;"/>
				<outline text="&lt;p&gt;June 2018 by Dave Winer&lt;p&gt;"/>
				<outline text="&lt;h1&gt;XML-RPC-in-JSON examples&lt;/h1&gt;"/>
				<outline text="&lt;p&gt;My new &lt;a href=&quot;https://github.com/scripting/xml-rpc&quot;&gt;JavaScript toolkit&lt;/a&gt; for XML-RPC supports a &lt;a href=&quot;https://github.com/scripting/xml-rpc#using-json-in-place-of-xml&quot;&gt;JSON syntax&lt;/a&gt;.&lt;/p&gt;"/>
				<outline text="&lt;p&gt;Here's a table comparing the two versions.&lt;/p&gt;"/>
				<outline text=""/>
				<outline text="&lt;h4&gt;Single param&lt;/h4&gt;"/>
				<outline text="&lt;pre&gt;"/>
				<outline text="&amp;lt;methodCall&gt;">
					<outline text="&amp;lt;methodName&gt;examples.getStateName&amp;lt;/methodName&gt;"/>
					<outline text="&amp;lt;params&gt;">
						<outline text="&amp;lt;param&gt;">
							<outline text="&amp;lt;value&gt;&amp;lt;int&gt;50&amp;lt;/int&gt;&amp;lt;/value&gt;"/>
							<outline text="&amp;lt;/param&gt;"/>
							</outline>
						<outline text="&amp;lt;/params&gt;"/>
						</outline>
					<outline text="&amp;lt;/methodCall&gt;"/>
					</outline>
				<outline text="&lt;/pre&gt;"/>
				<outline text="&lt;pre&gt;"/>
				<outline text="{">
					<outline text="&quot;methodCall&quot;: {">
						<outline text="&quot;methodName&quot;: &quot;examples.getStateName&quot;,"/>
						<outline text="&quot;params&quot;: [">
							<outline text="23"/>
							<outline text="]"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="&lt;/pre&gt;"/>
				<outline text=""/>
				<outline text=""/>
				<outline text="&lt;h4&gt;Param is an array&lt;/h4&gt;"/>
				<outline text="&lt;pre&gt;"/>
				<outline text="&amp;lt;methodCall&gt;">
					<outline text="&amp;lt;methodName&gt;examples.getStateList&amp;lt;/methodName&gt;"/>
					<outline text="&amp;lt;params&gt;">
						<outline text="&amp;lt;param&gt;">
							<outline text="&amp;lt;value&gt;">
								<outline text="&amp;lt;array&gt;">
									<outline text="&amp;lt;data&gt;">
										<outline text="&amp;lt;value&gt;&amp;lt;int&gt;12&amp;lt;/int&gt;&amp;lt;/value&gt;"/>
										<outline text="&amp;lt;value&gt;&amp;lt;int&gt;44&amp;lt;/int&gt;&amp;lt;/value&gt;"/>
										<outline text="&amp;lt;value&gt;&amp;lt;int&gt;4&amp;lt;/int&gt;&amp;lt;/value&gt;"/>
										<outline text="&amp;lt;value&gt;&amp;lt;int&gt;1&amp;lt;/int&gt;&amp;lt;/value&gt;"/>
										<outline text="&amp;lt;/data&gt;"/>
										</outline>
									<outline text="&amp;lt;/array&gt;"/>
									</outline>
								<outline text="&amp;lt;/value&gt;"/>
								</outline>
							<outline text="&amp;lt;/param&gt;"/>
							</outline>
						<outline text="&amp;lt;/params&gt;"/>
						</outline>
					<outline text="&amp;lt;/methodCall&gt;"/>
					</outline>
				<outline text="&lt;/pre&gt;"/>
				<outline text="&lt;pre&gt;"/>
				<outline text="{">
					<outline text="&quot;methodCall&quot;: {">
						<outline text="&quot;methodName&quot;: &quot;examples.getStateList&quot;,"/>
						<outline text="&quot;params&quot;: [">
							<outline text="[">
								<outline text="12,"/>
								<outline text="44,"/>
								<outline text="4"/>
								<outline text="]"/>
								</outline>
							<outline text="]"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="&lt;/pre&gt;"/>
				<outline text=""/>
				<outline text=""/>
				<outline text="&lt;h4&gt;Param is a struct&lt;/h4&gt;"/>
				<outline text="&lt;pre&gt;"/>
				<outline text="&amp;lt;methodCall&gt;">
					<outline text="&amp;lt;methodName&gt;examples.getStateStruct&amp;lt;/methodName&gt;"/>
					<outline text="&amp;lt;params&gt;">
						<outline text="&amp;lt;param&gt;">
							<outline text="&amp;lt;value&gt;">
								<outline text="&amp;lt;struct&gt;">
									<outline text="&amp;lt;member&gt;">
										<outline text="&amp;lt;name&gt;state1&amp;lt;/name&gt;"/>
										<outline text="&amp;lt;value&gt;">
											<outline text="&amp;lt;int&gt;12&amp;lt;/int&gt;"/>
											<outline text="&amp;lt;/value&gt;"/>
											</outline>
										<outline text="&amp;lt;/member&gt;"/>
										</outline>
									<outline text="&amp;lt;member&gt;">
										<outline text="&amp;lt;name&gt;state2&amp;lt;/name&gt;"/>
										<outline text="&amp;lt;value&gt;">
											<outline text="&amp;lt;int&gt;8&amp;lt;/int&gt;"/>
											<outline text="&amp;lt;/value&gt;"/>
											</outline>
										<outline text="&amp;lt;/member&gt;"/>
										</outline>
									<outline text="&amp;lt;/struct&gt;"/>
									</outline>
								<outline text="&amp;lt;/value&gt;"/>
								</outline>
							<outline text="&amp;lt;/param&gt;"/>
							</outline>
						<outline text="&amp;lt;/params&gt;"/>
						</outline>
					<outline text="&amp;lt;/methodCall&gt;"/>
					</outline>
				<outline text="&lt;/pre&gt;"/>
				<outline text="&lt;pre&gt;"/>
				<outline text="{">
					<outline text="&quot;methodCall&quot;: {">
						<outline text="&quot;methodName&quot;: &quot;examples.getStateStruct&quot;,"/>
						<outline text="&quot;params&quot;: [">
							<outline text="{">
								<outline text="&quot;state1&quot;: 12,"/>
								<outline text="&quot;state2&quot;: 8"/>
								<outline text="}"/>
								</outline>
							<outline text="]"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="&lt;/pre&gt;"/>
				<outline text=""/>
				<outline text=""/>
				<outline text="&lt;h4&gt;Normal, non-error response&lt;/h4&gt;"/>
				<outline text="&lt;pre&gt;"/>
				<outline text="&amp;lt;methodResponse&gt;">
					<outline text="&amp;lt;params&gt;">
						<outline text="&amp;lt;param&gt;">
							<outline text="&amp;lt;value&gt;">
								<outline text="&amp;lt;string&gt;South Carolina&amp;lt;/string&gt;"/>
								<outline text="&amp;lt;/value&gt;"/>
								</outline>
							<outline text="&amp;lt;/param&gt;"/>
							</outline>
						<outline text="&amp;lt;/params&gt;"/>
						</outline>
					<outline text="&amp;lt;/methodResponse&gt;"/>
					</outline>
				<outline text="&lt;/pre&gt;"/>
				<outline text="&lt;pre&gt;"/>
				<outline text="{">
					<outline text="&quot;methodResponse&quot;: {">
						<outline text="&quot;value&quot;: &quot;South Carolina&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="&lt;/pre&gt;"/>
				<outline text=""/>
				<outline text=""/>
				<outline text=""/>
				<outline text="&lt;h4&gt;Error response&lt;/h4&gt;"/>
				<outline text="&lt;pre&gt;"/>
				<outline text="&amp;lt;methodResponse&gt;">
					<outline text="&amp;lt;fault&gt;">
						<outline text="&amp;lt;value&gt;">
							<outline text="&amp;lt;struct&gt;">
								<outline text="&amp;lt;member&gt;">
									<outline text="&amp;lt;name&gt;faultCode&amp;lt;/name&gt;"/>
									<outline text="&amp;lt;value&gt;&amp;lt;i4&gt;1&amp;lt;/i4&gt;&amp;lt;/value&gt;"/>
									<outline text="&amp;lt;/member&gt;"/>
									</outline>
								<outline text="&amp;lt;member&gt;">
									<outline text="&amp;lt;name&gt;faultString&amp;lt;/name&gt;"/>
									<outline text="&amp;lt;value&gt;&amp;lt;string&gt;Can't delete the file because it doesn't exist.&amp;lt;/string&gt;&amp;lt;/value&gt;"/>
									<outline text="&amp;lt;/member&gt;"/>
									</outline>
								<outline text="&amp;lt;/struct&gt;"/>
								</outline>
							<outline text="&amp;lt;/value&gt;"/>
							</outline>
						<outline text="&amp;lt;/fault&gt;"/>
						</outline>
					<outline text="&amp;lt;/methodResponse&gt;"/>
					</outline>
				<outline text="&lt;/pre&gt;"/>
				<outline text="&lt;pre&gt;"/>
				<outline text="{">
					<outline text="&quot;methodResponse&quot;: {">
						<outline text="&quot;fault&quot;: {">
							<outline text="&quot;faultCode&quot;: 1,"/>
							<outline text="&quot;faultString&quot;: &quot;Can't delete the file because it doesn't exist.&quot;"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="&lt;/pre&gt;"/>
				<outline text=""/>
				<outline text=""/>
				<outline text="&lt;/div&gt;"/>
				<outline text="&lt;script&gt;">
					<outline text="$(document).ready (function () {">
						<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
						<outline text="});"/>
						</outline>
					<outline text="&lt;/script&gt;"/>
					</outline>
				<outline text="&lt;/body&gt;"/>
				<outline text="&lt;/html&gt;"/>
				</outline>
			</outline>
		<outline text="build script">
			<outline text="nodeEditorSuite.utilities.buildXmlRpcDocs ()"/>
			</outline>
		</body>
	</opml>
